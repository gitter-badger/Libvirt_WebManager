@model Libvirt_WebManager.Areas.Storage_Pool.Models.Storage_Volume_Upload
@{
    Layout = "~/Views/Shared/_Blank_Layout.cshtml";
}

<script src="~/Scripts/jQuery.FileUpload/jquery.iframe-transport.js"></script>
<script src="~/Scripts/jQuery.FileUpload/jquery.fileupload.js"></script>
<script src="~/Scripts/jQuery.FileUpload/jquery.fileupload-process.js"></script>
<script src="~/Scripts/jQuery.FileUpload/jquery.fileupload-validate.js"></script>

<script>

    $(function () {
        'use strict';
        // Change this to the location of your server-side upload handler:
           var uploadButton = $('<button/>').addClass('btn btn-primary').prop('disabled', true).text('Processing...').on('click', function () {
                    var $this = $(this),
                        data = $this.data();
                    $this.off('click').text('Abort').on('click', function () {
                            $this.remove();
                            data.abort();
                        });
                    data.submit().always(function () {
                        $this.remove();
                    });
                });
        $('#fileupload').fileupload({
            url: '@Html.Raw(Url.HttpRouteUrl("DefaultApi", new { controller = "VolumeFiles", action = "UpladFile", Volume = Model.Volume, Host = Model.Host, Parent = Model.Parent }))',
            dataType: 'json',
            autoUpload: false,
            acceptFileTypes: /(\.|\/)(iso)$/i,
            maxChunkSize: 10000000
        }).on('fileuploadadd', function (e, data) {
            data.context = $('<div/>').appendTo('#files');
            $.each(data.files, function (index, file) {
                var node = $('<p/>').append($('<span/>').text(file.name));
                if (!index) {
                    node.append('<br>').append(uploadButton.clone(true).data(data));
                }
                node.appendTo(data.context);
            });
        }).on('fileuploadprocessalways', function (e, data) {
            var index = data.index,
                file = data.files[index],
                node = $(data.context.children()[index]);
            if (file.error) {
                node.append('<br>').append($('<span class="text-danger"/>').text(file.error));
            }
            if (index + 1 === data.files.length) {
                data.context.find('button').text('Upload').prop('disabled', !!data.files.error);
            }
        }).on('fileuploadprogressall', function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#progress .progress-bar').css('width',progress + '%');
        }).on('fileuploaddone', function (e, data) {
            $.each(data.result.files, function (index, file) {
                if (file.url) {
                    var link = $('<a>').attr('target', '_blank').prop('href', file.url);
                    $(data.context.children()[index]).wrap(link);
                } else if (file.error) {
                    var error = $('<span class="text-danger"/>').text(file.error);
                    $(data.context.children()[index]) .append('<br>').append(error);
                }
            });
        }).on('fileuploadfail', function (e, data) {
            $.each(data.files, function (index) {
                var error = $('<span class="text-danger"/>').text('File upload failed.');
                $(data.context.children()[index]).append('<br>').append(error);
            });
        }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');
    });
</script>
<div class="row">
    <div class="col-sm-12">
        <div class="page-header">
            <h2>
                @Model.Volume
            </h2>
        </div>
        <p>Replace volume with uploaded file.</p>
        <span class="btn btn-success fileinput-button">
            <i class="glyphicon glyphicon-plus"></i>
            <span>Select file</span>
            <!-- The file input field used as target for the file upload widget -->
            <input id="fileupload" type="file" name="files[]">
        </span>
        <div id="progress" class="progress">
            <div class="progress-bar progress-bar-success"></div>
        </div>

        <div id="files" class="files"></div>
      
    </div>
</div>