@model Libvirt_WebManager.ViewModels.Storage.Storage_Volume_Down

<div id="_Partial_CreateVolume_Form">
    <script>
        function Storage_Volume_Volume_Typeupdate() {
            if ($('#Volume_Volume_Type :selected').text() == "iso") {
                console.log('show');
                $('#FileArea').show();
            } else {
                $('#FileArea').hide();
                console.log('hide');
            }
        }
        function fileselected() {
            var x = document.getElementById('Volume_File')
            if ('files' in x) {
                if (x.files.length == 0) {
                    txt = "Select one or more files.";
                } else {
                    for (var i = 0; i < x.files.length; i++) {
                        var file = x.files[i];
                        if ('size' in file) {
                            if (file.size > 0) {
                                var present = Math.floor(file.size / 1000000000) + 1;
                                $('#Volume_capacity').val(present);
                                return;
                            }
                        }
                    }
                }
            }
        }
        $(document).ready(function () {
            console.log('got');
            $('#Volume_Volume_Type').change(function () {
                Storage_Volume_Volume_Typeupdate();
            });
            Storage_Volume_Volume_Typeupdate();
        });
    </script>@using (Ajax.BeginForm("_Partial_CreateVolume", Html.Controller(), null, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "_Partial_CreateVolume_Form", InsertionMode = InsertionMode.ReplaceWith, LoadingElementId = "_Partial_CreateVolume_Form_spinner" }, new { enctype = "multipart/form-data" }))
    {
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <h4 class="modal-title">Create Storage Volume -@Model.Volume.Host-</h4>
        </div>
        <div class="modal-body">

            <div class="row">
                <div class="col-sm-12">

                    @Html.HiddenFor(a => a.Volume.Host)
                    @Html.HiddenFor(a => a.Volume.Parent)
                    <div class="form-group-sm">
                        @Html.ValidationSummary()
                    </div>
                    <div class="form-group-sm">
                        @Html.LabelFor(a => a.Volume.name)
                        @Html.TextBoxFor(a => a.Volume.name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(a => a.Volume.name)
                    </div>
                    <div class="form-group-sm">
                        @Html.LabelFor(a => a.Volume.Volume_Type)
                        @Html.EnumDropDownListFor(a => a.Volume.Volume_Type, new { @class = "form-control" })
                        @Html.ValidationMessageFor(a => a.Volume.Volume_Type)
                    </div>
                    <div id="FileArea" class="form-group-sm">
                        @Html.LabelFor(a => a.Volume.File)
                        <input type="file" id="Volume_File" name="File" class="form-control" onchange="fileselected();" />
                        @Html.ValidationMessageFor(a => a.Volume.File)
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped active" style="width:0;">
                                0%
                            </div>
                        </div>
                    </div>
                    <h3>Pool Details:</h3>
                    <dl class="dl-horizontal">
                        <dt>State</dt>
                        <dd>@Model.PoolInfo.state</dd>
                        <dt>Capacity</dt>
                        <dd>@Libvirt_WebManager.Utilities.String.Formatting.Format((long)Model.PoolInfo.capacity)</dd>
                        <dt>allocation</dt>
                        <dd>@Libvirt_WebManager.Utilities.String.Formatting.Format((long)Model.PoolInfo.allocation)</dd>
                        <dt>Available</dt>
                        <dd>@Libvirt_WebManager.Utilities.String.Formatting.Format((long)Model.PoolInfo.available)</dd>
                    </dl>
                    <div class="input-group-sm">
                        @Html.LabelFor(a => a.Volume.allocation)
                        @Html.TextBoxFor(a => a.Volume.allocation, new
                   {
                       @class = "form-control",
                       @type = "number",
                       min = 0,
                       step = 1,
                       max = ((Model.PoolInfo.available / (1024 * 1024 * 1000)) - 1),
                       data_toggle = "tooltip",
                       data_placement = "bottom",
                       title = "Specify 0 if you want to pre allocate the entire capacity."
                   })
                        <span class="input-group-addon">GB</span>
                        @Html.ValidationMessageFor(a => a.Volume.allocation)
                    </div>
                    <div class="input-group-sm">
                        @Html.LabelFor(a => a.Volume.capacity)
                        @Html.TextBoxFor(a => a.Volume.capacity, new
                   {
                       @class = "form-control",
                       @type = "number",
                       min = 1,
                       step = 1,
                       max = ((Model.PoolInfo.available / (1024 * 1024 * 1000)) - 1),
                   })
                        <span class="input-group-addon">GB</span>
                        @Html.ValidationMessageFor(a => a.Volume.capacity)
                    </div>


                </div>
            </div>

        </div>
        <div class="modal-footer">
            <button class="btn btn-primary pull-right">
                Create
                @Html.Spinner("_Partial_CreateVolume_Form_spinner")
            </button>
        </div>
    }
</div>
